/**
 * ts是js类型超集，支持es6，支持面向对象编程的概念，如类，接口，继承，泛型
 * 是一种静态类型检查语言，提供类型注解，在代码编译阶段就可以检查出数据类型的错误
 * 为了保证兼容性，ts需要在编译阶段就编译成js运行
 * ts主要特性：
 *  类型批注和编译时类型检查 ：在编译时批注变量类型
    类型推断：ts 中没有批注变量类型会自动推断变量的类型
    类型擦除：在编译过程中批注的内容和接口会在运行时利用工具擦除
    接口：ts 中用接口来定义对象类型
    枚举：用于取值被限定在一定范围内的场景
    Mixin：可以接受任意类型的值
    泛型编程：写代码时使用一些以后才指定的类型
    名字空间：名字只在该区域内有效，其他区域可重复使用该名字而不冲突
    元组：元组合并了不同类型的对象，相当于一个可以装不同类型数据的数组
 * 类型批注：
        number boolean string array tuple enum any null和undefined
        void never object对象类型
        never：其他类型（包括null，undefined）的子类型，可以赋值给任何类型，
        代表从不会出现的值

    枚举类型：
    enum 被命名的整形常数集合，用于声明一组命名的常数，当一个变量有几种可能的取值类型时，可以
    定义为枚举类型
        数字枚举
        字符串枚举
        异构枚举



 */